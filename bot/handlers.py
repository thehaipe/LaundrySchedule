import telebot
from datetime import datetime, timedelta
from .database import BookingDatabase
from .keyboards import (
    create_date_keyboard, 
    create_time_slots_keyboard,
    create_user_bookings_keyboard,
    create_main_menu_keyboard
)
from .config import TIME_SLOTS, MAX_DAYS_AHEAD

class BotHandlers:
    def __init__(self, bot: telebot.TeleBot):
        self.bot = bot
        self.db = BookingDatabase()
        self.setup_handlers()
        
    def setup_handlers(self):
        """–ù–∞–ª–∞—à—Ç–æ–≤—É—î –≤—Å—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏"""
        
        @self.bot.message_handler(commands=['start'])
        def start_command(message):
            username = message.from_user.username
            if not username:
                self.bot.reply_to(message, 
                    "‚ùå –î–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –±–æ—Ç–∞ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ username –≤ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö Telegram!")
                return
                
            welcome_text = f"–ü—Ä–∏–≤—ñ—Ç, @{username}! üëã\n\n" \
                          "–¶–µ –±–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å—É –Ω–∞ –ø—Ä–∞–Ω–Ω—è –≤ 21 –≥—É—Ä—Ç–æ–∂–∏—Ç–∫—É.\n" \
                          "–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é:\n\n" \
                          "–ó–Ω–∞–π—à–ª–∏ –ø–æ–º–∏–ª–∫—É? –ü–æ–≤—ñ–¥–æ–º—Ç–µ @luganskskyyyy\n" \
                          "–ü—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –±–æ—Ç–∞ –º–æ–∂–Ω–∞ –±–∞–Ω–∫–æ—é: https://send.monobank.ua/jar/98JVYjBfM4"
                          

            keyboard = create_main_menu_keyboard()
            self.bot.send_message(message.chat.id, welcome_text, reply_markup=keyboard)
            
        @self.bot.callback_query_handler(func=lambda call: True)
        def handle_callback(call):
            try:
                self.process_callback(call)
            except Exception as e:
                print(f"Error in callback handler: {e}")
                self.bot.answer_callback_query(call.id, "–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
                
    def process_callback(self, call):
        """–û–±—Ä–æ–±–ª—è—î callback –∑–∞–ø–∏—Ç–∏"""
        data = call.data
        username = call.from_user.username
        
        if not username:
            self.bot.answer_callback_query(call.id, 
                "‚ùå –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å username –≤ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö Telegram!")
            return
            
        # –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
        if data == "new_booking":
            self.show_date_selection(call)
            
        elif data == "my_bookings":
            self.show_user_bookings(call, username)
            
        elif data == "refresh":
            # –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ –∂ —Å–∞–º–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–º—ñ—Å—Ç—å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ
            pass
        elif data == "back_to_main":
            self.show_main_menu(call)
            
        elif data == "back_to_main":
            self.show_main_menu(call)
            
        elif data == "back_to_dates":
            self.show_date_selection(call)
            
        # –í–∏–±—ñ—Ä –¥–∞—Ç–∏
        elif data.startswith("date_"):
            date_key = data.replace("date_", "")
            self.show_time_slots(call, date_key)
            
        # –ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è —Å–ª–æ—Ç—É
        elif data.startswith("book_"):
            parts = data.replace("book_", "").split("_", 1)
            if len(parts) == 2:
                date_key, time_slot = parts
                self.book_slot(call, date_key, time_slot, username)
                
        # –°–∫–∞—Å—É–≤–∞–Ω–Ω—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è
        elif data.startswith("cancel_"):
            parts = data.replace("cancel_", "").split("_", 1)
            if len(parts) == 2:
                date_key, time_slot = parts
                self.cancel_booking(call, date_key, time_slot, username)
                
        # –ó–∞–π–Ω—è—Ç–∏–π —Å–ª–æ—Ç
        elif data.startswith("occupied_"):
            self.bot.answer_callback_query(call.id, "‚ùå –¶–µ–π —á–∞—Å –≤–∂–µ –∑–∞–π–Ω—è—Ç–∏–π!")
            
    def show_main_menu(self, call):
        """–ü–æ–∫–∞–∑—É—î –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"""
        welcome_text = f"–ü—Ä–∏–≤—ñ—Ç, @{call.from_user.username}! üëã\n\n" \
                      "–¶–µ –±–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å—É –Ω–∞ –ø—Ä–∞–Ω–Ω—è –≤ 21 –≥—É—Ä—Ç–æ–∂–∏—Ç–∫—É.\n" \
                        "–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é:\n\n" \
                        "–ó–Ω–∞–π—à–ª–∏ –ø–æ–º–∏–ª–∫—É? –ü–æ–≤—ñ–¥–æ–º—Ç–µ @luganskskyyyy\n" \
                        "–ü—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –±–æ—Ç–∞ –º–æ–∂–Ω–∞ –±–∞–Ω–∫–æ—é: https://send.monobank.ua/jar/98JVYjBfM4"
                      
        keyboard = create_main_menu_keyboard()
        self.edit_message(call, welcome_text, keyboard)
        
    def show_date_selection(self, call):
        """–ü–æ–∫–∞–∑—É—î –≤–∏–±—ñ—Ä –¥–∞—Ç (—Å—å–æ–≥–æ–¥–Ω—ñ –∞–±–æ –∑–∞–≤—Ç—Ä–∞)"""
        text = "üìÖ –í–∏–±–µ—Ä—ñ—Ç—å –¥–∞—Ç—É –¥–ª—è –∑–∞–ø–∏—Å—É –Ω–∞ –ø—Ä–∞–Ω–Ω—è:"
        keyboard = create_date_keyboard()
        self.edit_message(call, text, keyboard)
        self.bot.answer_callback_query(call.id)
        
    def show_time_slots(self, call, date_key):
        """–ü–æ–∫–∞–∑—É—î –¥–æ—Å—Ç—É–ø–Ω—ñ —á–∞—Å–æ–≤—ñ —Å–ª–æ—Ç–∏ –¥–ª—è –≤–∏–±—Ä–∞–Ω–æ—ó –¥–∞—Ç–∏"""
        try:
            date = datetime.strptime(date_key, '%Y-%m-%d')
        except ValueError:
            self.bot.answer_callback_query(call.id, "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç–∏!")
            return
            
        # –û—á–∏—â–∞—î–º–æ —Å—Ç–∞—Ä—ñ –∑–∞–ø–∏—Å–∏
        self.db.cleanup_old_bookings()
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —Ä–æ–∑–∫–ª–∞–¥ –Ω–∞ –¥–µ–Ω—å
        schedule = self.db.get_day_schedule(date, TIME_SLOTS)
        
        # –§—ñ–ª—å—Ç—Ä—É—î–º–æ –º–∏–Ω—É–ª—ñ —ñ–Ω—Ç–µ—Ä–≤–∞–ª–∏ –¥–ª—è —Å—å–æ–≥–æ–¥–Ω—ñ
        now = datetime.now()
        available_slots = []
        
        if date.date() == now.date():  # –Ø–∫—â–æ —Å—å–æ–≥–æ–¥–Ω—ñ
            for time_slot in TIME_SLOTS:
                start_time_str = time_slot.split('-')[0]
                slot_datetime = datetime.strptime(f"{date_key} {start_time_str}", '%Y-%m-%d %H:%M')
                if slot_datetime > now:  # –¢—ñ–ª—å–∫–∏ –º–∞–π–±—É—Ç–Ω—ñ —ñ–Ω—Ç–µ—Ä–≤–∞–ª–∏
                    available_slots.append(time_slot)
        else:  # –Ø–∫—â–æ –∑–∞–≤—Ç—Ä–∞ - –≤—Å—ñ —ñ–Ω—Ç–µ—Ä–≤–∞–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ
            available_slots = TIME_SLOTS
            
        # –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç —Ä–æ–∑–∫–ª–∞–¥—É
        date_str = date.strftime('%d.%m.%Y')
        day_name = "—Å—å–æ–≥–æ–¥–Ω—ñ" if date.date() == datetime.now().date() else "–∑–∞–≤—Ç—Ä–∞"
        text = f"üìã –†–æ–∑–∫–ª–∞–¥ –Ω–∞ {day_name} ({date_str}):\n\n"
        
        for time_slot in available_slots:
            username = schedule.get(time_slot)
            if username:
                text += f"{time_slot} - @{username}\n"
            else:
                text += f"{time_slot} - –≤—ñ–ª—å–Ω–æ\n"
                
        if not available_slots:
            text += "–ù–∞ —Å—å–æ–≥–æ–¥–Ω—ñ –≤–∂–µ –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —ñ–Ω—Ç–µ—Ä–≤–∞–ª—ñ–≤.\n"
            text += "–°–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø–∏—Å–∞—Ç–∏—Å—å –Ω–∞ –∑–∞–≤—Ç—Ä–∞."
        else:
            text += "\nüí° –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ —ñ–Ω—Ç–µ—Ä–≤–∞–ª —â–æ–± –∑–∞–ø–∏—Å–∞—Ç–∏—Å—å:"
        
        keyboard = create_time_slots_keyboard(schedule, date_key, available_slots)
        self.edit_message(call, text, keyboard)
        self.bot.answer_callback_query(call.id)
        
    def book_slot(self, call, date_key, time_slot, username):
        """–ó–∞–ø–∏—Å—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ —Å–ª–æ—Ç"""
        try:
            date = datetime.strptime(date_key, '%Y-%m-%d')
        except ValueError:
            self.bot.answer_callback_query(call.id, "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç–∏!")
            return
            
        # –ù–∞–º–∞–≥–∞—î–º–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç–∏
        if self.db.book_slot(date, time_slot, username):
            date_str = date.strftime('%d.%m.%Y')
            success_text = f"‚úÖ –£—Å–ø—ñ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–æ!\n\n" \
                          f"üìÖ –î–∞—Ç–∞: {date_str}\n" \
                          f"üïê –Ü–Ω—Ç–µ—Ä–≤–∞–ª: {time_slot}\n" \
                          f"üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: @{username}\n\n" \
                          f"–©–æ–± —Å–∫–∞—Å—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Å, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ \"–ú–æ—ó –∑–∞–ø–∏—Å–∏\"."
                          
            keyboard = create_main_menu_keyboard()
            self.edit_message(call, success_text, keyboard)
            self.bot.answer_callback_query(call.id, "‚úÖ –ó–∞–ø–∏—Å–∞–Ω–æ!")
        else:
            self.bot.answer_callback_query(call.id, "‚ùå –¶–µ–π —á–∞—Å –≤–∂–µ –∑–∞–π–Ω—è—Ç–∏–π!")
            # –û–Ω–æ–≤–ª—é—î–º–æ —Ä–æ–∑–∫–ª–∞–¥ - –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ –ª–æ–≥—ñ–∫—É —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó
            self.show_time_slots(call, date_key)
            
    def cancel_booking(self, call, date_key, time_slot, username):
        """–°–∫–∞—Å–æ–≤—É—î –∑–∞–ø–∏—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
        try:
            date = datetime.strptime(date_key, '%Y-%m-%d')
        except ValueError:
            self.bot.answer_callback_query(call.id, "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç–∏!")
            return
            
        if self.db.cancel_booking(date, time_slot, username):
            date_str = date.strftime('%d.%m.%Y')
            success_text = f"‚úÖ –ó–∞–ø–∏—Å —Å–∫–∞—Å–æ–≤–∞–Ω–æ!\n\n" \
                          f"üìÖ –î–∞—Ç–∞: {date_str}\n" \
                          f"üïê –Ü–Ω—Ç–µ—Ä–≤–∞–ª: {time_slot}\n\n" \
                          f"–Ü–Ω—Ç–µ—Ä–≤–∞–ª —Ç–µ–ø–µ—Ä –≤—ñ–ª—å–Ω–∏–π –¥–ª—è —ñ–Ω—à–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤."
                          
            keyboard = create_main_menu_keyboard()
            self.edit_message(call, success_text, keyboard)
            self.bot.answer_callback_query(call.id, "‚úÖ –°–∫–∞—Å–æ–≤–∞–Ω–æ!")
        else:
            self.bot.answer_callback_query(call.id, "‚ùå –ü–æ–º–∏–ª–∫–∞ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è!")
            
    def show_user_bookings(self, call, username):
        """–ü–æ–∫–∞–∑—É—î –∑–∞–ø–∏—Å–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
        user_bookings = self.db.get_user_bookings(username)
        
        # –§—ñ–ª—å—Ç—Ä—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –º–∞–π–±—É—Ç–Ω—ñ –∑–∞–ø–∏—Å–∏
        now = datetime.now()
        future_bookings = []
        
        for booking in user_bookings:
            booking_start_time = booking['time'].split('-')[0]  # –ë–µ—Ä–µ–º–æ –ø–æ—á–∞—Ç–æ–∫ —ñ–Ω—Ç–µ—Ä–≤–∞–ª—É
            booking_datetime = datetime.strptime(f"{booking['date']} {booking_start_time}", '%Y-%m-%d %H:%M')
            if booking_datetime > now:
                future_bookings.append(booking)
        
        if not future_bookings:
            text = "üìã –£ –≤–∞—Å –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–ø–∏—Å—ñ–≤.\n\n" \
                   "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å \"üìÖ –ó–∞–ø–∏—Å–∞—Ç–∏—Å—å –Ω–∞ –ø—Ä–∞–Ω–Ω—è\" —â–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –∑–∞–ø–∏—Å."
            keyboard = create_main_menu_keyboard()
        else:
            text = f"üìã –í–∞—à—ñ –∑–∞–ø–∏—Å–∏ (@{username}):\n\n"
            for booking in future_bookings:
                date_obj = datetime.strptime(booking['date'], '%Y-%m-%d')
                date_str = date_obj.strftime('%d.%m.%Y')
                day_name = "—Å—å–æ–≥–æ–¥–Ω—ñ" if date_obj.date() == datetime.now().date() else "–∑–∞–≤—Ç—Ä–∞"
                text += f"üìÖ {day_name} ({date_str}) - {booking['time']}\n"
            
            text += "\nüí° –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∑–∞–ø–∏—Å —â–æ–± –π–æ–≥–æ —Å–∫–∞—Å—É–≤–∞—Ç–∏:"
            keyboard = create_user_bookings_keyboard(future_bookings)
            
        self.edit_message(call, text, keyboard)
        self.bot.answer_callback_query(call.id)
        
    def edit_message(self, call, text, keyboard=None):
        """–†–µ–¥–∞–≥—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫"""
        try:
            self.bot.edit_message_text(
                text,
                call.message.chat.id,
                call.message.message_id,
                reply_markup=keyboard
            )
        except Exception as e:
            error_msg = str(e)
            # –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫—É "message is not modified" - —Ü–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
            if "message is not modified" not in error_msg:
                print(f"Error editing message: {e}")
                # –Ø–∫—â–æ –Ω–µ –≤–¥–∞—î—Ç—å—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                try:
                    self.bot.send_message(call.message.chat.id, text, reply_markup=keyboard)
                except Exception as e2:
                    print(f"Error sending new message: {e2}")